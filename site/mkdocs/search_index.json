{
    "docs": [
        {
            "location": "/",
            "text": "Bun venit\n\n\nAplicatia a fost construita cu scopul de a asista la administrarea aplicatiei Sistem Informatic pentru Gestiunea \ndatelor intr-o biblioteca.\n\nAplicatia realizat in APEX Application este disponibila \naici\n\nRealizata in Python, aplicatia foloseste modulul \ncx_Oracle\n\n\nVersiunea 1.0\n\n\n\n\nPornire baza de date;\n\n\nInchidere baza de date;\n\n\nAfisare toate tabelele detinute de utilizator;\n\n\nComanda SQL DESCRIBE;\n\n\nComanda SQL SELECT;\n\n\nComanda SQL COUNT.\n\n\n\n\nVersiunea 2.0\n\n\n\n\nCrearea unei tabele prin intermediul Python; \n\n\nCrearea unui program PL/SQL;\n\n\nPosibilitatea selectarii anumitor campuri folosind SELECT;\n\n\nPosibilitatea folosirii comenzii COUNT doar pe anumite campuri;",
            "title": "Acasa"
        },
        {
            "location": "/start/",
            "text": "Pentru conectarea la o baza de date Oracle se foloseste modulul cx_Oracle.\n\nPentru instalare folositi urmatoarea comanda:\n\n\npip install cx_Oracle\n\n\n\n\n\n Exemplu de conectare la baza de date Oracle:\n\n\n#modulul pentru conectarea la Oracle\nimport cx_Oracle\n#modul pentru passwordbox\nfrom easygui import passwordbox\n#preluam numele utilizatorului de la tastatura\nprint(\"Numele utilizatorului:\")\nuser = input()\n#preluam parola utilizatorului de la tastatura\nprint(\"Parola utilizatorului:\")\nparola = passwordbox(\"Parola\")\n#incercam sa ne conectam la Oracle si afisam\n#un mesaj daca conectarea s-a realizat cu succes\ntry:\n    connection = cx_Oracle.connect(user,parola)\n    print(\"Conexiunea s-a realizat cu succes\")\n#daca utilizatorul sau parola este gresita afisam un mesaj de eroare\nexcept:\n    print(\"Utilizator sau parola gresita\")\n#inchidem conexiunea la Oracle\nconnection.close()",
            "title": "Start"
        },
        {
            "location": "/start_db/",
            "text": "Modulul cx_Oracle ofera posibilitatea de a porni/opri o baza de date Oracle Database, incepand cu versiunea 10G.\n\nFunctie pentru pornirea bazei de date:\n\n\nimport cx_Oracle\ndef pornire_db():\n#conexiunea trebuie sa fie in modul PRELIM_AUTH\n    try:\n        connection = cx_Oracle.connect(\"/\",\n            mode = cx_Oracle.SYSDBA | cx_Oracle.PRELIM_AUTH)\n        connection.startup()\n        print(\"Conexiune creata!\")\n    except:\n        print(\"A aparut o eroare!\")\n    try:\n#SYSDBA\n        connection = cx_Oracle.connect(\"/\", mode = cx_Oracle.SYSDBA)\n        cursor = connection.cursor()\n        cursor.execute(\"alter database mount\")\n        cursor.execute(\"alter database open\")\n        print(\"Baza de date a fost pornita cu succes!\")\n    except:\n        print(\"A aparut o eroare!\")\n#if __name__ == \"__main__\":\n #   pornire_db()",
            "title": "Start Database"
        },
        {
            "location": "/stop_db/",
            "text": "Functie pentru oprirea unei baze de date Oracle:\n\n\n#modulul pentru Oracle\nimport cx_Oracle\ndef shutdown_db():\n#conectare ca SYSDBA or SYSOPER\n    try:\n        connection = cx_Oracle.connect(\"/\", mode = cx_Oracle.SYSDBA)\n        print(\"Conexiune realizata!\")\n    except:\n        print(\"Conexiunea nu s-a putut realiza!\")\n#apelare functie shutdown\n    try:\n        connection.shutdown(mode = cx_Oracle.DBSHUTDOWN_IMMEDIATE)\n        print(\"25% Complet\")\n    except:\n        print(\"A aparut o eroare!\")\n#deconectare baza de date\n    try:\n        cursor = connection.cursor()\n        cursor.execute(\"alter database close normal\")\n        cursor.execute(\"alter database dismount\")\n        print(\"75% Complet\")\n    except:\n        print(\"A aparut o eroare!\")\n#final shutdown\n    try:\n        connection.shutdown(mode = cx_Oracle.DBSHUTDOWN_FINAL)\n        print(\"100% Complet. Baza de date a fost inchisa cu succes!\")\n    except:\n        print(\"Baza de date nu a fost inschisa!\")\n#if __name__ == \"__main__\":\n#    shutdown_db()",
            "title": "Stop Database"
        },
        {
            "location": "/select/",
            "text": "Modulul cx_Oracle ofera posibilitatea folosirii comenzii SELECT.\n\nFunctia urmatoare selecteaza toate informatiile din tabela data:\n\n\n#modul Oracle\nimport cx_Oracle\n#modul passwordbox\nfrom easygui import passwordbox\ndef select_all():\n#cerem numele utilizatorului\n    print(\"Numele utilizatorului:\")\n    user = input()\n#cerem parola utilizatorului\n    parola = passwordbox(\"Parola utilizatorului\")\n#conectarea la Oracle\n    conexiune = cx_Oracle.connect(user,parola)\n#functie care afiseaza structura unei tabele date\n#utilizatorul trebuie sa introduca numele tabelei\n    print(\"Numele tabelei\")\n    tablename = input()\n#cursor\n    cursor = conexiune.cursor()\n#comanda select\n    cursor.execute('select * from %s' % tablename)\n#afisarea informatiilor\n    for rezultat in cursor:\n        print (rezultat)\n#if __name__ == '__main__':\n   #select_all()",
            "title": "Select"
        },
        {
            "location": "/describe/",
            "text": "Modulul cx_Oracle nu ofera posibilitatea afisarii structurii unei tabele, insa asta nu inseamna ca nu se putem face acesta lucru.\nFunctia care indeplineste rolul de comanda DESCRIBE:\n\n\n#modul Oracle\nimport cx_Oracle\n#modul passwordbox\nfrom easygui import passwordbox\ndef describe():\n#cerem numele utilizatorului\n    print(\"Numele utilizatorului:\")\n    user = input()\n#cerem parola utilizatorului\n    parola = passwordbox(\"Parola utilizatorului\")\n#conectarea la Oracle\n    conexiune = cx_Oracle.connect(user,parola)\n#functie care afiseaza structura unei tabele date\n#utilizatorul trebuie sa introduca numele tabelei\n    print(\"Numele tabelei\")\n    tablename = input()\n#cursor\n    cursor = conexiune.cursor()\n#comanda describe\n    cursor.execute('select * from %s where 1=0' % tablename)\n    print(\"Nume coloana\\t\", \"NULL\\t\", \"Tip\\t\", \"Lungime\\t\")\n#afisarea informatiilor\n    for desc in cursor.description:\n        column_name = desc[0]\n        nullable = desc[6]\n        data_type = desc[1].__name__\n        data_length = desc[3]\n        print (column_name, \"\\t\",  nullable, \"\\t\", data_type, \"\\t\", data_length, \"\\t\",)\n#if __name__ == '__main__':\n   # describe()",
            "title": "Describe"
        },
        {
            "location": "/count/",
            "text": "Pentru a calcula numarul inregistrarilor dintr-o tabela folosim COUNT.\n\nPrin intermediul cx_Oracle putem crea o functie foarte simpla:\n\n\n#modul Oracle\nimport cx_Oracle\n#modul passwordbox\nfrom easygui import passwordbox\ndef count():\n#cerem numele utilizatorului\n    print(\"Numele utilizatorului:\")\n    user = input()\n#cerem parola utilizatorului\n    parola = passwordbox(\"Parola utilizatorului\")\n#conectarea la Oracle\n    conexiune = cx_Oracle.connect(user,parola)\n#functie care afiseaza numar de inregistrari dintr-o tabela data\n#utilizatorul trebuie sa introduca numele tabelei\n    print(\"Numele tabelei\")\n    tablename = input()\n#cursor\n    cursor = conexiune.cursor()\n#comanda describe\n    cursor.execute('select count(*) from %s' % tablename)\n    count = cursor.fetchall()[0][0]\n#afisarea informatiilor\n    print(\"Numarul de inregistrari din tabela\", tablename, \"este\" , count)\n#if __name__ == '__main__':\n   #count()",
            "title": "Count"
        }
    ]
}